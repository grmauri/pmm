# Debug mode
DBG = off

# Optimization switch
OPT = on

# Include dir
INCLUDES = -I//opt/ibm/ILOG/CPLEX_Studio1210/cplex/include/ilcplex

# Objects
OBJS = pfclp_instance.o 

# Libraries
METLIB = -L//opt/metis-5.1.0/build/Linux-x86_64/libmetis -lmetis
KAHLIB = -L//opt/KaHIP-3.00/deploy -lkahip -lmetis
CPXLIB = -L//opt/ibm/ILOG/CPLEX_Studio1210/cplex/lib/x86-64_linux/static_pic -lcplex -lpthread -ldl

# Programs
PFCLP_CPLEX_OBJ = pfclp_cplex.o
PFCLP_CPLEX_EXE = pfclp_cplex

PFCLP_CS_OBJ = pfclp_cs.o
PFCLP_CS_EXE = pfclp_cs

PFCLP_ALNS_OBJ = pfclp_alns.o
PFCLP_ALNS_EXE = pfclp_alns

PFCLP_RELAX_OBJ = pfclp_relax.o
PFCLP_RELAX_EXE = pfclp_relax


CXX = g++

USER_FLAGS = -std=c++14

# Compiler flags for debugging
ifeq ($(OPT), off)
	USER_FLAGS += -ggdb3 -fexceptions -fno-omit-frame-pointer \
		-fno-optimize-sibling-calls -fno-inline
else
	USER_FLAGS += -O3 -fomit-frame-pointer -funroll-loops
	ifeq ($(CXX), g++)
		USER_FLAGS += -ftracer -fpeel-loops -fprefetch-loop-arrays
	endif
endif

# Enabling debug mode (cout)
ifeq ($(DBG), on)
	USER_FLAGS += -DDBG
endif

# Include parallel stuff
###USER_FLAGS += -fopenmp


# Warning flags
USER_FLAGS += -Wall -Wextra -Wcast-align -Wcast-qual -Wdisabled-optimization \
	-Wformat=2 -Winit-self -Wmissing-format-attribute -Wshadow \
	-Wpointer-arith -Wredundant-decls -Wstrict-aliasing=2 \
	-Wfloat-equal -Weffc++

ifeq ($(CXX), g++)
	USER_FLAGS += -Wunsafe-loop-optimizations
endif

CXXFLAGS = $(USER_FLAGS)

.PHONY: all cplex cs alns relax clean
.SUFFIXES: .cpp .o

all: pfclp_cplex pfclp_cs pfclp_alns pfclp_relax

cplex: pfclp_cplex

cs: pfclp_cs

alns: pfclp_alns

relax: pfclp_relax


pfclp_cplex: $(OBJS) $(PFCLP_CPLEX_OBJ)
	@echo "--> Linking objects... "
	$(CXX) $(CXXFLAGS) $(OBJS) $(PFCLP_CPLEX_OBJ) -o $(PFCLP_CPLEX_EXE) $(CPXLIB)
	@echo

pfclp_cs: $(OBJS) $(PFCLP_CS_OBJ)
	@echo "--> Linking objects... "
	$(CXX) $(CXXFLAGS) $(OBJS) $(PFCLP_CS_OBJ) -o $(PFCLP_CS_EXE) $(CPXLIB)
	@echo

pfclp_alns: $(OBJS) $(PFCLP_ALNS_OBJ)
	@echo "--> Linking objects... "
	$(CXX) $(CXXFLAGS) $(OBJS) $(PFCLP_ALNS_OBJ) -o $(PFCLP_ALNS_EXE)
	@echo

pfclp_relax: $(OBJS) $(PFCLP_RELAX_OBJ)
	@echo "--> Linking objects... "
	$(CXX) $(CXXFLAGS) $(OBJS) $(PFCLP_RELAX_OBJ) -o $(PFCLP_RELAX_EXE) $(METLIB) $(KAHLIB) $(CPXLIB)
	@echo


.cpp.o:
	@echo "--> Compiling $<..."
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(USER_DEFINES) -c $< -o $@
	@echo

clean:
	@echo "--> Cleaning compiled..."
	rm -rf $(OBJS) $(PFCLP_CPLEX_OBJ) $(PFCLP_CPLEX_EXE)
	rm -rf $(OBJS) $(PFCLP_CS_OBJ) $(PFCLP_CS_EXE)
	rm -rf $(OBJS) $(PFCLP_ALNS_OBJ) $(PFCLP_ALNS_EXE)
	rm -rf $(OBJS) $(PFCLP_RELAX_OBJ) $(PFCLP_RELAX_EXE)
	rm -rf *o
